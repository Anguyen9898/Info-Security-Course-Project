package com.anguyen.mymap.ui.activitiesimport android.content.Intentimport androidx.appcompat.app.AppCompatActivityimport android.os.Bundleimport android.widget.EditTextimport androidx.recyclerview.widget.LinearLayoutManagerimport androidx.recyclerview.widget.RecyclerViewimport com.anguyen.mymap.adapters.gender.OnGendersItemsClickListenerimport com.anguyen.mymap.commons.changeColorimport com.anguyen.mymap.commons.errorDialogimport com.anguyen.mymap.commons.showInternetErrorDialogimport com.anguyen.mymap.Rimport com.anguyen.mymap.adapters.gender.GenderAdapterimport com.anguyen.mymap.commons.*import com.anguyen.mymap.models.*import com.anguyen.mymap.presenter.RegisterPresenterimport com.anguyen.mymap.ui.fragments.BottomDialogGenderChooserFragmentimport com.anguyen.mymap.ui.views.RegisterViewimport com.google.android.material.bottomsheet.BottomSheetDialogimport com.kaopiz.kprogresshud.KProgressHUDimport kotlinx.android.synthetic.*import kotlinx.android.synthetic.main.activity_register.*import kotlinx.android.synthetic.main.gender_bottom_dialog.*class RegisterActivity : AppCompatActivity(), RegisterView, OnGendersItemsClickListener {    private lateinit var mPresenter: RegisterPresenter    private lateinit var userType: String    private lateinit var genderDialog: BottomDialogGenderChooserFragment    private lateinit var progressDialog: KProgressHUD    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        setContentView(R.layout.activity_register)        progressDialog = initProgress(this)        initUI()    }    override fun onStart() {        progressDialog.dismiss()        super.onStart()    }    /**     * Initialize Register Presenter     */    private fun initPresenter(): RegisterPresenter {          return RegisterPresenter(            this, this,            RegisterDetail(                edt_username.text.toString(),                edt_email.text.toString(),                edt_new_password.text.toString(),                edt_pass_confirm.text.toString()            ),            UserInformationDetail(                userType,                EMAIL_USER_TYPE_URL,                DEFAULT_AVATAR_URL,                edt_gender.text.toString(),                edt_phone_number.text.toString(),                CoordinateDetail(),                hashMapOf(Pair(KEY_NOTIFICATION, NotificationDetail()))            ),            listOf(                edt_username,                edt_email,                edt_new_password,                edt_pass_confirm,                edt_phone_number            )        )    }    private fun initUI(){        userType =  this.intent.getStringExtra(KEY_USER_TYPE)!!        mPresenter = initPresenter()        genderDialog = BottomDialogGenderChooserFragment(this)        //Get if LoginActivity's email is not empty        edt_email.setText(intent.getStringExtra("account"))        //Catch errors while text is changed        catchEventOnTextChanged()        //On Button Clicked        btn_register.onClick {            progressDialog.show()            mPresenter.onRegisterButtonClicked()        }        btn_back.onClick { onBackPressed() }        edt_gender.onClick {            genderDialog.show(supportFragmentManager, "dialog")        }    }    override fun onRecycleViewItemClickHandler(selectedString: String?, selectedIndex: Int) {        if(selectedIndex != 0){            edt_gender.setText(selectedString)        }        genderDialog.dismiss()    }    private fun catchEventOnTextChanged(){        edt_username.onTextChanged { mPresenter.onUsernameChange(it) }        edt_gender.onTextChanged { mPresenter.onGenderChange(it) }        edt_email.onTextChanged { mPresenter.onEmailChange(it) }        edt_phone_number.onTextChanged { mPresenter.onPhoneNumberChange(it) }        edt_new_password.onTextChanged { mPresenter.onPasswordChange(it)}        edt_pass_confirm.onTextChanged { mPresenter.onRepeatPasswordChange(it) }    }    override fun onRegisterSuccess(registerDetail: RegisterDetail?) {        progressDialog.dismiss()        showToastByResourceId(this, R.string.register_success)        //startActivity(Intent(this, AvatarSelectorActivity::class.java))        val intent = Intent(this, MainActivity::class.java)        intent.putExtra(KEY_USER_TYPE, userType)        startActivity(intent)        this.finish()    }    override fun onRegisterFail() {        progressDialog.dismiss()        errorDialog(            this,            R.string.register_failed_title,            R.string.register_fail_message        )    }    override fun onEmptyFieldsError(vararg emptyFields: EditText) {        progressDialog.dismiss()        emptyFields.forEach { it.error = getString(R.string.empty_field_required) }    }    override fun showEmailError() {        edt_email.error = getString(R.string.invalid_email)    }    override fun showUsernameError(count: Int) {        username_count.text = count.toString()        if (isUsernameValid(edt_username.text.toString())) {            changeColor(                listOf(username_count, username_min_val_required)                , R.color.hintDefault            )        }else {            changeColor(                listOf(username_count, username_min_val_required)                , R.color.colorRequired            )        }    }    override fun showPhoneNumberFormatError() {        edt_phone_number.error = getString(R.string.invalid_phone_number)    }    override fun showPasswordLengthError(count: Int) {        register_password_count.text = count.toString()        if (isPasswordValid(edt_new_password.text.toString())) {            changeColor(                listOf(register_password_count, register_min_val_required)                , R.color.hintDefault            )        }else {            changeColor(                listOf(register_password_count, register_min_val_required)                , R.color.colorRequired            )        }    }    override fun showPasswordMatchingError() {        edt_pass_confirm.error = getString(R.string.password_matching_error)    }    override fun fireBaseExceptionError(message: String) {        progressDialog.dismiss()        showFirebaseError(this, message)    }    override fun internetError() {        progressDialog.dismiss()        showInternetErrorDialog(this)    }    override fun onDestroy() {        clearFindViewByIdCache()        super.onDestroy()    }}